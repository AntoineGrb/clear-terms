Il y a deux identités dans ton système :

- device_id - identité “physique / navigateur” ✅ Référence maître
- jwt token session signée temporaire ❌ Ne doit jamais être la source de vérité

Donc toutes les décisions (crédits, plan, historique) doivent être prises uniquement sur device_id, jamais sur le token. Le token ne sert qu’à prouver temporairement que ce device_id a été validé auparavant.

🚦Gestion des 3 cas
1) Token expiré

On peut le régénérer immédiatement si le device_id est connu côté backend.

- Le frontend envoie la requête avec (token, device_id)
- Backend détecte token expired
- Backend vérifie : device_id existe dans users.json ?
- oui → on signe un NOUVEAU token et on le renvoie
- non → on traite comme “nouvel utilisateur”

→ Aucun blocage, renouvellement silencieux.

2) Token corrompu (modifié / invalide)

C’est potentiellement une tentative de fraude → on doit ignorer totalement ce token. Mais on NE BLOQUE PAS immédiatement l’utilisateur si on a un device_id valide.

Process :

- On rejette le token
- On regarde device_id côté backend
- S’il existe → on émet un NOUVEAU token propre
- S’il n’existe pas → on crée un nouveau user

→ Pas de blocage, mais pas moyen de “tricher” car seul device_id fait foi.

3) Token absent

Cas normal : première requête, ou reset local, ou perte stockage extension.

Même logique :

device_id connu ?	Action
✅ oui	Regénérer un token à partir de ce user
❌ non	Créer un nouveau user et signer un token